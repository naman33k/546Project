package edu.illinois.cs.cogcomp.illinoisRE.common;

import java.util.Collections;
import java.util.Comparator;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import edu.illinois.cs.cogcomp.edison.sentences.Constituent;
import edu.illinois.cs.cogcomp.illinoisRE.main.FilePathManager;

public class Constants {
	
	public static final String PATH_BROWN_CLUSTER_NYT = FilePathManager.getProjectRoot() + "/data/brown_clusters";  
	
	
	public static final String GOLD_ACE_MENTION_VIEW = "GOLD_ACE_MENTION_VIEW";
	public static final String GOLD_ACE_RELATION_VIEW = "GOLD_ACE_RELATION_VIEW";

	public static final String GOLD_IC_MENTION_VIEW = "GOLD_IC_MENTION_VIEW";
	public static final String GOLD_IC_RELATION_VIEW = "GOLD_IC_RELATION_VIEW";

	public static final String CANDIDATE_MENTION_VIEW = "CANDIDATE_MENTION_VIEW";
	public static final String TYPED_CANDIDATE_MENTION_VIEW = "TYPED_CANDIDATE_MENTION_VIEW";

	public static final String PRED_ACE_MENTION_VIEW = "PRED_ACE_MENTION_VIEW";
	public static final String PRED_ACE_RELATION_VIEW = "PRED_ACE_RELATION_VIEW";

	public static final String PRED_IC_MENTION_VIEW = "PRED_IC_MENTION_VIEW";
	public static final String PRED_IC_RELATION_VIEW = "PRED_IC_RELATION_VIEW";


	public static final String POS_MENTION = "POS_MENTION";
	public static final String PARSE_PHRASE = "PARSE_PHRASE";
	public static final String CHUNK_PHRASE = "CHUNK_PHRASE";
	
	public static final String SPAN_EXTENT = "SPAN_EXTENT";
	public static final String SPAN_CANDIDATE = "SPAN_CANDIDATE";
	public static final String SPAN_HEAD = "SPAN_HEAD";

	public static Set<String> validStartPOS = new HashSet<String>();
	static {
		validStartPOS.add("D");
		validStartPOS.add("J");
		validStartPOS.add("V");
		validStartPOS.add("N");
		validStartPOS.add("P");
		validStartPOS.add("W");
		// ---------------------
		validStartPOS.add("C");
		validStartPOS.add("D");
		validStartPOS.add("E");
		validStartPOS.add("F");
		validStartPOS.add("I");
		validStartPOS.add("J");
		validStartPOS.add("L");
		validStartPOS.add("M");
		validStartPOS.add("N");
		validStartPOS.add("P");
		validStartPOS.add("R");
		validStartPOS.add("S");
		validStartPOS.add("T");
		validStartPOS.add("U");
		validStartPOS.add("V");
		validStartPOS.add("W");
	}
	public static Set<String> validEndPOS = new HashSet<String>();
	static {
		validEndPOS.add("N");
		validEndPOS.add("R");
		validEndPOS.add("P");
		validEndPOS.add("W");
		// ---------------------
		validEndPOS.add("C");
		validEndPOS.add("D");
		validEndPOS.add("E");
		validEndPOS.add("F");
		validEndPOS.add("I");
		validEndPOS.add("J");
		validEndPOS.add("L");
		validEndPOS.add("M");
		validEndPOS.add("N");
		validEndPOS.add("P");
		validEndPOS.add("R");
		validEndPOS.add("S");
		validEndPOS.add("T");
		validEndPOS.add("U");
		validEndPOS.add("V");
		validEndPOS.add("W");
	}

	public static Set<String> invalidStartPOS = new HashSet<String>();
	static {
		invalidStartPOS.add(".");
		invalidStartPOS.add(",");
		invalidStartPOS.add(":");
		invalidStartPOS.add(";");
		invalidStartPOS.add("!");
		invalidStartPOS.add("$");
		invalidStartPOS.add("*");
		// -----------------------
		// invalidStartPOS.add("POS");
	}

	public static Set<String> invalidEndPOS = new HashSet<String>();
	static {
		invalidEndPOS.add(".");
		invalidEndPOS.add(",");
		invalidEndPOS.add(":");
		invalidEndPOS.add(";");
		invalidEndPOS.add("!");
		invalidEndPOS.add("$");
		invalidEndPOS.add("*");
		// -----------------------
		// invalidEndPOS.add("D");
		// invalidEndPOS.add("J");
		// invalidEndPOS.add("V");
		// invalidEndPOS.add("POS");
	}

	public static Set<String> setXMLTags = new HashSet<String>();
	static {
		setXMLTags.add("DOC");
		setXMLTags.add("DOCID");
		setXMLTags.add("DOCTYPE");
		setXMLTags.add("DATETIME");
		setXMLTags.add("ENDTIME");
		setXMLTags.add("TRAILER");
		setXMLTags.add("BODY");
		setXMLTags.add("SLUG");
		setXMLTags.add("KEYWORD");
		setXMLTags.add("HEADER");
		setXMLTags.add("HEADLINE");
		setXMLTags.add("FOOTER");
		setXMLTags.add("TEXT");
		setXMLTags.add("P");
		setXMLTags.add("TURN");
		setXMLTags.add("POST");
		setXMLTags.add("SPEAKER");
		setXMLTags.add("POSTER");
		setXMLTags.add("SUBJECT");
		setXMLTags.add("POSTDATE");
		setXMLTags.add("QUOTE");
	}

	public static void sortConstituents(List<Constituent> constituents) {

		Collections.sort(constituents, new Comparator<Constituent>() {

			public int compare(Constituent o1, Constituent o2) {
				if (o1.getStartSpan() > o2.getStartSpan()) {
					return 1;
				} else {
					if (o1.getStartSpan() == o2.getStartSpan()) {
						if (o1.getEndSpan() > o2.getEndSpan())
							return 1;
						else
							return 0;
					} else
						return -1;
				}
			}
		});
	}

}
