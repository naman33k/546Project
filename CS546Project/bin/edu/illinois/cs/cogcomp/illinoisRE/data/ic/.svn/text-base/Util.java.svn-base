package edu.illinois.cs.cogcomp.illinoisRE.data.ic;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.ArrayList;

public class Util {

	public static ArrayList<String> trimAllSpaces(ArrayList<String> lines) {
		ArrayList<String> myLines = new ArrayList<String>();
		
		for(int i=0; i<lines.size(); i++) {
			String s = lines.get(i);
			s = s.replaceAll("\t", " ");
			s = s.replaceAll(" +", " ");
			s = s.trim();
			myLines.add(s);
		}
		
		return myLines;
	}
	
	public static ArrayList<String> readFromFile(String filename) {
		FileInputStream inputFile = null;
		InputStreamReader reader = null;
		BufferedReader bufferedReader = null;
		String line = null;
		ArrayList<String> lines = new ArrayList<String>();
		
		try {
			inputFile = new FileInputStream(filename);
			reader = new InputStreamReader(inputFile);
			bufferedReader = new BufferedReader(reader);
			while( (line = bufferedReader.readLine()) != null ) {
				lines.add(line);
			}
			bufferedReader.close();
		} catch (IOException e) {
			System.err.println(e);
		}
		
		return lines;
	}
	
	public static void writeToFile(String filename, ArrayList<String> lines) {
		try {
			FileOutputStream outputFile = new FileOutputStream(filename, false);
			OutputStreamWriter writer = new OutputStreamWriter(outputFile);
			BufferedWriter bufferedWriter = new BufferedWriter(writer);
			PrintWriter printWriter = new PrintWriter(bufferedWriter, true);

			for(int i=0; i<lines.size(); i++) {
				printWriter.println(lines.get(i));
			}

			printWriter.close();
		} catch (IOException e) {
			System.err.println(e);
		}
	}
	
	public static String[] getListOfFilesInDir(String dirpath) {
		File dir = new File(dirpath); 
		String[] children = dir.list();
		return children; 
	}
}
